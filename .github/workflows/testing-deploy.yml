name: Deploy Monolith to testing stage

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Deploy Implementer'
        default: 'World'
        required: true
      release-version:
        description: 'Release version number'
        required: true
      ticket:
        description: 'Release ticket number in tracker'
        default: 'Without ticket'
        required: false

jobs:
  greet:
    runs-on: ubuntu-latest

    steps:
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
    - name: Show deploy ticket
      run: echo "Deploy ticket ${{ github.event.inputs.name }}"

  deploy:
   runs-on: ubuntu-latest
   environment: testing
   
   steps:
   - uses: actions/checkout@v3
   
   - name: Login to Yandex Cloud Container Registry
     id: login-cr
     uses: yc-actions/yc-cr-login@v1
     with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
         
   - name: Build docker image
     env:
       CR_REGISTRY: crpp4a802h6om9om40b4
       CR_REPOSITORY: mono-backend
       IMAGE_TAG: ${{ github.event.inputs.release-version }}
     run: docker build . --file Dockerfile --tag cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
     
   - name: Push docker image to Yandex.Cloud registry
     env:
       CR_REGISTRY: crpp4a802h6om9om40b4
       CR_REPOSITORY: mono-backend
       IMAGE_TAG: ${{ github.event.inputs.release-version }}
     run: docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
     
   - name: Wait untill Yandex.Clout process new docker image
     uses: jakejarvis/wait-action@v0.1.1
     with:
       time: '60s'
       
   - name: Set up kubectl on runner
     uses: azure/setup-kubectl@v3
     id: kubectl-install
     with:
       version: v1.22.4
       
   - name: Install Yandex.Cloud CLI
     run: curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          
